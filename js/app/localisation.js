define(function () {
    class Localisation {

        constructor() {

            this._translations = [
                {
                    lang: 'en',
                    languageName: 'English',
                    texts: [
                        {selector: '#btnPlay img', attribute: 'alt', value: 'Play'},
                        {selector: '#btnPlay img', attribute: 'title', value: 'Play'},
                        {selector: '#btnPause img', attribute: 'alt', value: 'Pause'},
                        {selector: '#btnPause img', attribute: 'title', value: 'Pause'},
                        {selector: '#btnRandom img', attribute: 'alt', value: 'Random'},
                        {selector: '#btnRandom img', attribute: 'title', value: 'Refresh with a random automaton'},
                        {selector: '#btnSave img', attribute: 'alt', value: 'Save'},
                        {selector: '#btnSave img', attribute: 'title', value: 'Save the image'},
                        {selector: '#btnLanguage img', attribute: 'title', value: 'Change language'},
                        {selector: '#btnFullScreen img', attribute: 'alt', value: 'Full screen'},
                        {selector: '#btnFullScreen img', attribute: 'title', value: 'Display in full screen'},
                        {selector: '#btnExitFullScreen img', attribute: 'alt', value: 'Exit full screen'},
                        {selector: '#btnExitFullScreen img', attribute: 'title', value: 'Exit from full screen'},
                        {selector: '#languageMenuHeading', content: 'Languages'},
                        {selector: '.btnBack img', attribute: 'alt', value: 'Back'},
                        {selector: '.btnBack img', attribute: 'title', value: 'Back to the main menu'},
                        {selector: '#ruleLabel', content: 'Rule (0-255):'},
                        {selector: '#btnGo', content: 'Go'},
                        {textId: 'INVALID_RULE', value: 'Invalid rule'},
                        {selector: '#aboutMenuHeading', content: 'About'},
                        {selector: '#aboutMenuContent', htmlContent: `
                    <p>
                        This site displays images generated by elementary 1-dimensional cellular automata, for more information see
                        <a href="https://en.wikipedia.org/wiki/Elementary_cellular_automaton" target="_blank">Wikipedia</a>.
                    </p>
                    <p>
                        The site was created by <a href="https://twitter.com/Ellyll" target="_blank">@Ellyll</a> and is
                        available on <a href="https://github.com/Ellyll/CellularAutomata" target="_blank">github</a>. It
                        was inspired by Irina Shestak <a href="https://twitter.com/_lrlna" target="_blank">@_lrlna</a>
                        and Mattias P Johansson <a href="https://twitter.com/mpjme" target="_blank">@mpjme</a>, and
                        their YouTube video
                        <a href="https://www.youtube.com/watch?v=bc-fVdbjAwk" target="_blank">Cellular Automata - Pair Programming - FunFunFunction #49</a>.
                    </p>`}
                    ]
                },
                {
                    lang: 'cy',
                    languageName: 'Cymraeg',
                    texts: [
                        {selector: '#btnPlay img', attribute: 'alt', value: 'Chwarae'},
                        {selector: '#btnPlay img', attribute: 'title', value: 'Chwarae'},
                        {selector: '#btnPause img', attribute: 'alt', value: 'Aros'},
                        {selector: '#btnPause img', attribute: 'title', value: 'Aros'},
                        {selector: '#btnRandom img', attribute: 'alt', value: 'Ar hap'},
                        {selector: '#btnRandom img', attribute: 'title', value: 'Cynhyrchu delwedd newydd gan ddefnyddio awtomaton ar hap' },
                        {selector: '#btnSave img', attribute: 'alt', value: 'Arbed'},
                        {selector: '#btnSave img', attribute: 'title', value: 'Arbed y ddelwedd'},
                        {selector: '#btnLanguage img', attribute: 'title', value: 'Newid iaith'},
                        {selector: '#btnFullScreen img', attribute: 'alt', value: 'Sgrin llawn'},
                        {selector: '#btnFullScreen img', attribute: 'title', value: 'Dangos mewn sgrin llawn'},
                        {selector: '#btnExitFullScreen img', attribute: 'alt', value: 'Gadael sgrin llawn'},
                        {selector: '#btnExitFullScreen img', attribute: 'title', value: 'Gadael sgrin llawn'},
                        {selector: '#languageMenuHeading', content: 'Ieithoedd'},
                        {selector: '.btnBack img', attribute: 'alt', value: 'Yn ôl'},
                        {selector: '.btnBack img', attribute: 'title', value: 'Yn ôl i\'r brif ddewislen'},
                        {selector: '#ruleLabel', content: 'Rheol (0-255):'},
                        {selector: '#btnGo', content: 'Mynd'},
                        {textId: 'INVALID_RULE', value: 'Rheol annilys'},
                        {selector: '#aboutMenuHeading', content: 'Am dan'},
                        {selector: '#aboutMenuContent', htmlContent: `
                    <p>
                        Mae'r safle yma yn dangos delweddau cynhyrchwyd gan awtomata cellog 1-dimensiwn elfennol, am fwy
                        o wybodaeth gwelwch
                        <a href="https://en.wikipedia.org/wiki/Elementary_cellular_automaton" target="_blank">Wicipedia</a>.
                    </p>
                    <p>
                        Crëwyd y safle gan <a href="https://twitter.com/Ellyll" target="_blank">@Ellyll</a>, ac mae o
                        ar gael ar <a href="https://github.com/Ellyll/CellularAutomata" target="_blank">github</a>. Yr
                        ysbrydolaeth oedd Irina Shestak <a href="https://twitter.com/_lrlna" target="_blank">@_lrlna</a>
                        a Mattias P Johansson <a href="https://twitter.com/mpjme" target="_blank">@mpjme</a>, ac eu
                        fideo YouTube
                        <a href="https://www.youtube.com/watch?v=bc-fVdbjAwk" target="_blank">Cellular Automata - Pair Programming - FunFunFunction #49</a>.
                    </p>`}
                    ]
                }
            ];

            this._validLanguages = this._translations.map(x => x.lang);
        }

        getValidLanguages() {
            return this._validLanguages;
        }

        getDefaultLanguage() {
            return this._validLanguages[0];
        }

        isValidLanguage(languageCode) {
            if (typeof languageCode === 'undefined') return false;
            return this._validLanguages.indexOf(languageCode) !== -1;
        }

        getValidLanguageOrDefault(languageCode) {
            return this.isValidLanguage(languageCode) ? languageCode : this.getDefaultLanguage();
        }

        getText(languageCode, textId) {
            const translation = this._translations.find(x => x.lang === languageCode) || this._translations[0];
            return translation.texts.find(x => x.textId === textId).value;
        }

        setLanguage(languageCode) {
            const translation = this._translations.find(x => x.lang === languageCode) || this._translations[0];

            translation.texts.forEach(t => {
                if (typeof t.attribute !== 'undefined') {
                    $(t.selector).attr(t.attribute, t.value);
                }
                if (typeof t.content !== 'undefined') {
                    $(t.selector).text(t.content);
                }
                if (typeof t.htmlContent !== 'undefined') {
                    $(t.selector).empty();
                    $(t.selector).append($(t.htmlContent));
                }
            });

            // Set alternate languages
            $('link[rel="alternate"]').remove();
            const url = document.location.toString();
            const reg = /([&?]lang=)[a-zA-Z\-]+/;
            this._translations.filter(t => t.lang !== languageCode).map(t => t.lang).forEach(lang => {
                const langUrl = url.replace(reg, `$1${lang}`);
                $('head').append(`<link rel="alternate" hreflang="${lang}" href="${langUrl}" />`);
            });

            // Set lang in html tag
            $('html').attr('lang', languageCode);
        }

        setLanguageLinks() {
            const $ul = $('ul.languageChoices');
            $ul.empty();
            this._translations.forEach(t => {
                $ul.append($(`<li><a class="languageChoice" href="#" data-lang="${t.lang}">${t.languageName}</a></li>`));
            });
        }
    }

    return Localisation;
});
